// <auto-generated />
using System;
using Management_Schedule_BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Management_Schedule_BE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Management_Schedule_BE.Models.Class", b =>
                {
                    b.Property<int>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassID"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxStudents")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("ClassID");

                    b.HasIndex("ClassName")
                        .IsUnique();

                    b.HasIndex("CourseID");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassID = 1,
                            ClassName = "Basic English A1",
                            CourseID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(956),
                            EndDate = new DateTime(2025, 9, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(955),
                            MaxStudents = 20,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(956),
                            StartDate = new DateTime(2025, 3, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(954),
                            Status = (byte)1
                        },
                        new
                        {
                            ClassID = 2,
                            ClassName = "Basic English A2",
                            CourseID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(961),
                            EndDate = new DateTime(2025, 10, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(961),
                            MaxStudents = 20,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(962),
                            StartDate = new DateTime(2025, 4, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(960),
                            Status = (byte)1
                        },
                        new
                        {
                            ClassID = 3,
                            ClassName = "Conversation English B1",
                            CourseID = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(965),
                            EndDate = new DateTime(2025, 11, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(964),
                            MaxStudents = 15,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(965),
                            StartDate = new DateTime(2025, 5, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(964),
                            Status = (byte)1
                        },
                        new
                        {
                            ClassID = 4,
                            ClassName = "Business English B2",
                            CourseID = 3,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(968),
                            EndDate = new DateTime(2025, 12, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(967),
                            MaxStudents = 15,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(968),
                            StartDate = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(967),
                            Status = (byte)1
                        },
                        new
                        {
                            ClassID = 5,
                            ClassName = "IELTS Preparation C1",
                            CourseID = 4,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(971),
                            EndDate = new DateTime(2026, 1, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(971),
                            MaxStudents = 10,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(972),
                            StartDate = new DateTime(2025, 7, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(970),
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("DiscountPercent")
                        .HasColumnType("tinyint");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsComingSoon")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompletable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPro")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelling")
                        .HasColumnType("bit");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("CourseID");

                    b.HasIndex("CourseName")
                        .IsUnique();

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            CourseName = "Tiếng Anh Cơ Bản",
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(914),
                            Description = "Khóa học tiếng Anh cho người mới bắt đầu",
                            DiscountPercent = (byte)0,
                            Duration = 48,
                            IsComingSoon = false,
                            IsCompletable = true,
                            IsPro = false,
                            IsSelling = true,
                            Level = (byte)1,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(915),
                            Price = 2000000m
                        },
                        new
                        {
                            CourseID = 2,
                            CourseName = "Tiếng Anh Giao Tiếp",
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(924),
                            Description = "Khóa học tiếng Anh giao tiếp cơ bản",
                            DiscountPercent = (byte)10,
                            Duration = 60,
                            IsComingSoon = false,
                            IsCompletable = true,
                            IsPro = false,
                            IsSelling = true,
                            Level = (byte)2,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(924),
                            Price = 2500000m
                        },
                        new
                        {
                            CourseID = 3,
                            CourseName = "Tiếng Anh Thương Mại",
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(926),
                            Description = "Khóa học tiếng Anh thương mại",
                            DiscountPercent = (byte)0,
                            Duration = 72,
                            IsComingSoon = false,
                            IsCompletable = true,
                            IsPro = true,
                            IsSelling = true,
                            Level = (byte)3,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(927),
                            Price = 3000000m
                        },
                        new
                        {
                            CourseID = 4,
                            CourseName = "IELTS Preparation",
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(929),
                            Description = "Khóa học luyện thi IELTS",
                            DiscountPercent = (byte)5,
                            Duration = 96,
                            IsComingSoon = false,
                            IsCompletable = true,
                            IsPro = true,
                            IsSelling = true,
                            Level = (byte)4,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(929),
                            Price = 5000000m
                        },
                        new
                        {
                            CourseID = 5,
                            CourseName = "TOEIC Master",
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(932),
                            Description = "Khóa học luyện thi TOEIC",
                            DiscountPercent = (byte)0,
                            Duration = 84,
                            IsComingSoon = false,
                            IsCompletable = true,
                            IsPro = true,
                            IsSelling = true,
                            Level = (byte)3,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(932),
                            Price = 4000000m
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Lesson", b =>
                {
                    b.Property<int>("LessonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonID"));

                    b.Property<string>("ContentUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("LessonID");

                    b.HasIndex("CourseID");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            LessonID = 1,
                            ContentUrl = "lesson1.mp4",
                            CourseID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1096),
                            Description = "Giới thiệu về khóa học",
                            Duration = 45,
                            IsPublished = true,
                            LessonName = "Bài 1: Giới thiệu",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1096),
                            Position = 1,
                            Type = (byte)1
                        },
                        new
                        {
                            LessonID = 2,
                            ContentUrl = "lesson2.mp4",
                            CourseID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1100),
                            Description = "Cách chào hỏi trong tiếng Anh",
                            Duration = 45,
                            IsPublished = true,
                            LessonName = "Bài 2: Chào hỏi",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1100),
                            Position = 2,
                            Type = (byte)1
                        },
                        new
                        {
                            LessonID = 3,
                            ContentUrl = "lesson3.mp4",
                            CourseID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1102),
                            Description = "Học về số đếm trong tiếng Anh",
                            Duration = 45,
                            IsPublished = true,
                            LessonName = "Bài 3: Số đếm",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1103),
                            Position = 3,
                            Type = (byte)1
                        },
                        new
                        {
                            LessonID = 4,
                            ContentUrl = "lesson4.mp4",
                            CourseID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1105),
                            Description = "Bài tập thực hành",
                            Duration = 45,
                            IsPublished = true,
                            LessonName = "Bài 4: Thực hành",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1105),
                            Position = 4,
                            Type = (byte)2
                        },
                        new
                        {
                            LessonID = 5,
                            ContentUrl = "lesson5.mp4",
                            CourseID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1107),
                            Description = "Bài kiểm tra kiến thức",
                            Duration = 45,
                            IsPublished = true,
                            LessonName = "Bài 5: Kiểm tra",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1108),
                            Position = 5,
                            Type = (byte)3
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleID"));

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("StudySessionId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("ScheduleID");

                    b.HasIndex("ClassID");

                    b.HasIndex("StudySessionId");

                    b.HasIndex("TeacherID");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            ScheduleID = 1,
                            ClassID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1039),
                            Date = new DateTime(2025, 6, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1039),
                            Room = "Room 01",
                            Status = (byte)1,
                            StudySessionId = 1,
                            TeacherID = 2
                        },
                        new
                        {
                            ScheduleID = 2,
                            ClassID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1043),
                            Date = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1044),
                            Room = "Room 01",
                            Status = (byte)1,
                            StudySessionId = 3,
                            TeacherID = 2
                        },
                        new
                        {
                            ScheduleID = 3,
                            ClassID = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1071),
                            Date = new DateTime(2025, 6, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1072),
                            Room = "Room 02",
                            Status = (byte)1,
                            StudySessionId = 2,
                            TeacherID = 3
                        },
                        new
                        {
                            ScheduleID = 4,
                            ClassID = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1074),
                            Date = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1074),
                            Room = "Room 02",
                            Status = (byte)1,
                            StudySessionId = 4,
                            TeacherID = 3
                        },
                        new
                        {
                            ScheduleID = 5,
                            ClassID = 3,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1076),
                            Date = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1077),
                            Room = "Room 03",
                            Status = (byte)1,
                            StudySessionId = 5,
                            TeacherID = 2
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("EnrollmentDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 4,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(865),
                            EnrollmentDate = new DateTime(2024, 12, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(859),
                            Level = (byte)1,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(865),
                            Status = (byte)1
                        },
                        new
                        {
                            StudentID = 5,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(869),
                            EnrollmentDate = new DateTime(2025, 1, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(868),
                            Level = (byte)2,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(870),
                            Status = (byte)1
                        },
                        new
                        {
                            StudentID = 6,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(872),
                            EnrollmentDate = new DateTime(2025, 2, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(871),
                            Level = (byte)1,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(872),
                            Status = (byte)1
                        },
                        new
                        {
                            StudentID = 7,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(875),
                            EnrollmentDate = new DateTime(2025, 3, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(874),
                            Level = (byte)3,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(875),
                            Status = (byte)1
                        },
                        new
                        {
                            StudentID = 8,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(877),
                            EnrollmentDate = new DateTime(2025, 4, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(877),
                            Level = (byte)2,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(878),
                            Status = (byte)1
                        },
                        new
                        {
                            StudentID = 9,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(880),
                            EnrollmentDate = new DateTime(2025, 5, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(880),
                            Level = (byte)1,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(881),
                            Status = (byte)1
                        },
                        new
                        {
                            StudentID = 10,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(883),
                            EnrollmentDate = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(882),
                            Level = (byte)2,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(883),
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.StudentClassEnrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentID"));

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalTuitionDue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TuitionPaid")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("ClassID");

                    b.HasIndex("StudentID");

                    b.ToTable("StudentClassEnrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentID = 1,
                            ClassID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1132),
                            EnrollmentDate = new DateTime(2025, 3, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1130),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1132),
                            Status = (byte)1,
                            StudentID = 4,
                            TotalTuitionDue = 2000000m,
                            TuitionPaid = 1000000m
                        },
                        new
                        {
                            EnrollmentID = 2,
                            ClassID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1137),
                            EnrollmentDate = new DateTime(2025, 3, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1136),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1137),
                            Status = (byte)1,
                            StudentID = 5,
                            TotalTuitionDue = 2000000m,
                            TuitionPaid = 2000000m
                        },
                        new
                        {
                            EnrollmentID = 3,
                            ClassID = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1140),
                            EnrollmentDate = new DateTime(2025, 4, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1139),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1140),
                            Status = (byte)1,
                            StudentID = 6,
                            TotalTuitionDue = 2000000m,
                            TuitionPaid = 1000000m
                        },
                        new
                        {
                            EnrollmentID = 4,
                            ClassID = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1143),
                            EnrollmentDate = new DateTime(2025, 4, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1142),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1144),
                            Status = (byte)1,
                            StudentID = 7,
                            TotalTuitionDue = 2000000m,
                            TuitionPaid = 2000000m
                        },
                        new
                        {
                            EnrollmentID = 5,
                            ClassID = 3,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1146),
                            EnrollmentDate = new DateTime(2025, 5, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1145),
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1147),
                            Status = (byte)1,
                            StudentID = 8,
                            TotalTuitionDue = 2500000m,
                            TuitionPaid = 1250000m
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.StudentTuitionHistory", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("EnrollmentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("PaymentMethod")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("TransactionID")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TuitionID")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("EnrollmentID");

                    b.HasIndex("TuitionID");

                    b.ToTable("StudentTuitionHistory");

                    b.HasData(
                        new
                        {
                            PaymentID = 1,
                            AmountPaid = 1000000m,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1245),
                            EnrollmentID = 1,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1246),
                            PaymentDate = new DateTime(2025, 4, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1244),
                            PaymentMethod = (byte)1,
                            Status = (byte)2,
                            TuitionID = 1
                        },
                        new
                        {
                            PaymentID = 2,
                            AmountPaid = 1000000m,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1251),
                            EnrollmentID = 2,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1252),
                            PaymentDate = new DateTime(2025, 4, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1250),
                            PaymentMethod = (byte)2,
                            Status = (byte)2,
                            TuitionID = 1
                        },
                        new
                        {
                            PaymentID = 3,
                            AmountPaid = 1000000m,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1254),
                            EnrollmentID = 2,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1255),
                            PaymentDate = new DateTime(2025, 5, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1253),
                            PaymentMethod = (byte)2,
                            Status = (byte)2,
                            TuitionID = 2
                        },
                        new
                        {
                            PaymentID = 4,
                            AmountPaid = 1000000m,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1257),
                            EnrollmentID = 3,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1257),
                            PaymentDate = new DateTime(2025, 5, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1256),
                            PaymentMethod = (byte)1,
                            Status = (byte)2,
                            TuitionID = 1
                        },
                        new
                        {
                            PaymentID = 5,
                            AmountPaid = 1000000m,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1260),
                            EnrollmentID = 4,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1260),
                            PaymentDate = new DateTime(2025, 5, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1259),
                            PaymentMethod = (byte)3,
                            Status = (byte)2,
                            TuitionID = 1
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.StudySession", b =>
                {
                    b.Property<int>("StudySessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudySessionId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudySessionId");

                    b.ToTable("StudySession");

                    b.HasData(
                        new
                        {
                            StudySessionId = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(994),
                            Description = "Ca học sáng",
                            DisplayName = "Ca 1",
                            EndTime = "09:00",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(994),
                            StartTime = "07:30"
                        },
                        new
                        {
                            StudySessionId = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(998),
                            Description = "Ca học sáng",
                            DisplayName = "Ca 2",
                            EndTime = "10:45",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(998),
                            StartTime = "09:15"
                        },
                        new
                        {
                            StudySessionId = 3,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1000),
                            Description = "Ca học chiều",
                            DisplayName = "Ca 3",
                            EndTime = "15:00",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1000),
                            StartTime = "13:30"
                        },
                        new
                        {
                            StudySessionId = 4,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1002),
                            Description = "Ca học chiều",
                            DisplayName = "Ca 4",
                            EndTime = "16:45",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1002),
                            StartTime = "15:15"
                        },
                        new
                        {
                            StudySessionId = 5,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1004),
                            Description = "Ca học tối",
                            DisplayName = "Ca 5",
                            EndTime = "19:30",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1005),
                            StartTime = "18:00"
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("GoogleUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ProfileImageUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("YouTubeUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("TeacherID");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherID = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(831),
                            FacebookUrl = "facebook.com/teacher1",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(832),
                            ProfileImageUrl = "teacher1.jpg"
                        },
                        new
                        {
                            TeacherID = 3,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(835),
                            FacebookUrl = "facebook.com/teacher2",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(835),
                            ProfileImageUrl = "teacher2.jpg"
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Tuition", b =>
                {
                    b.Property<int>("TuitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TuitionID"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("TuitionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("TuitionID");

                    b.HasIndex("TuitionName")
                        .IsUnique();

                    b.ToTable("Tuitions");

                    b.HasData(
                        new
                        {
                            TuitionID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1170),
                            DueDate = new DateTime(2025, 7, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1169),
                            Fee = 1000000m,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1171),
                            Status = (byte)1,
                            TuitionName = "Học phí tháng 1",
                            Type = (byte)1
                        },
                        new
                        {
                            TuitionID = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1174),
                            DueDate = new DateTime(2025, 8, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1174),
                            Fee = 1000000m,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1175),
                            Status = (byte)1,
                            TuitionName = "Học phí tháng 2",
                            Type = (byte)1
                        },
                        new
                        {
                            TuitionID = 3,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1177),
                            DueDate = new DateTime(2025, 9, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1177),
                            Fee = 1000000m,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1178),
                            Status = (byte)1,
                            TuitionName = "Học phí tháng 3",
                            Type = (byte)1
                        },
                        new
                        {
                            TuitionID = 4,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1180),
                            DueDate = new DateTime(2025, 10, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1179),
                            Fee = 1000000m,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1180),
                            Status = (byte)1,
                            TuitionName = "Học phí tháng 4",
                            Type = (byte)1
                        },
                        new
                        {
                            TuitionID = 5,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1183),
                            DueDate = new DateTime(2025, 11, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1182),
                            Fee = 1000000m,
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(1183),
                            Status = (byte)1,
                            TuitionName = "Học phí tháng 5",
                            Type = (byte)1
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(728),
                            DateOfBirth = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            FullName = "Admin User",
                            Gender = "M",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(740),
                            PasswordHash = "hashed_password",
                            Phone = "0123456789",
                            Role = (byte)1,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 2,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(751),
                            DateOfBirth = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "teacher1@example.com",
                            FullName = "Nguyễn Văn A",
                            Gender = "M",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(751),
                            PasswordHash = "hashed_password",
                            Phone = "0123456781",
                            Role = (byte)2,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 3,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(754),
                            DateOfBirth = new DateTime(1988, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "teacher2@example.com",
                            FullName = "Trần Thị B",
                            Gender = "F",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(754),
                            PasswordHash = "hashed_password",
                            Phone = "0123456782",
                            Role = (byte)2,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 4,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(756),
                            DateOfBirth = new DateTime(2000, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student1@example.com",
                            FullName = "Lê Văn C",
                            Gender = "M",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(757),
                            PasswordHash = "hashed_password",
                            Phone = "0123456783",
                            Role = (byte)3,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 5,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(758),
                            DateOfBirth = new DateTime(2001, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student2@example.com",
                            FullName = "Phạm Thị D",
                            Gender = "F",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(759),
                            PasswordHash = "hashed_password",
                            Phone = "0123456784",
                            Role = (byte)3,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 6,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(763),
                            DateOfBirth = new DateTime(2002, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student3@example.com",
                            FullName = "Hoàng Văn E",
                            Gender = "M",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(763),
                            PasswordHash = "hashed_password",
                            Phone = "0123456785",
                            Role = (byte)3,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 7,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(765),
                            DateOfBirth = new DateTime(2000, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student4@example.com",
                            FullName = "Đỗ Thị F",
                            Gender = "F",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(765),
                            PasswordHash = "hashed_password",
                            Phone = "0123456786",
                            Role = (byte)3,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 8,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(767),
                            DateOfBirth = new DateTime(2001, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student5@example.com",
                            FullName = "Vũ Văn G",
                            Gender = "M",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(767),
                            PasswordHash = "hashed_password",
                            Phone = "0123456787",
                            Role = (byte)3,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 9,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(769),
                            DateOfBirth = new DateTime(2002, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student6@example.com",
                            FullName = "Ngô Thị H",
                            Gender = "F",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(769),
                            PasswordHash = "hashed_password",
                            Phone = "0123456788",
                            Role = (byte)3,
                            Status = (byte)1
                        },
                        new
                        {
                            UserID = 10,
                            CreatedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(772),
                            DateOfBirth = new DateTime(2000, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "student7@example.com",
                            FullName = "Đặng Văn I",
                            Gender = "M",
                            ModifiedAt = new DateTime(2025, 6, 4, 12, 21, 40, 18, DateTimeKind.Local).AddTicks(772),
                            PasswordHash = "hashed_password",
                            Phone = "0123456790",
                            Role = (byte)3,
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Class", b =>
                {
                    b.HasOne("Management_Schedule_BE.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Lesson", b =>
                {
                    b.HasOne("Management_Schedule_BE.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Schedule", b =>
                {
                    b.HasOne("Management_Schedule_BE.Models.Class", "Class")
                        .WithMany("Schedules")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Management_Schedule_BE.Models.StudySession", "StudySession")
                        .WithMany("Schedules")
                        .HasForeignKey("StudySessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Management_Schedule_BE.Models.Teacher", "Teacher")
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherID");

                    b.Navigation("Class");

                    b.Navigation("StudySession");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Student", b =>
                {
                    b.HasOne("Management_Schedule_BE.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("Management_Schedule_BE.Models.Student", "StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.StudentClassEnrollment", b =>
                {
                    b.HasOne("Management_Schedule_BE.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Management_Schedule_BE.Models.Student", "Student")
                        .WithMany("ClassEnrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.StudentTuitionHistory", b =>
                {
                    b.HasOne("Management_Schedule_BE.Models.StudentClassEnrollment", "Enrollment")
                        .WithMany("TuitionHistory")
                        .HasForeignKey("EnrollmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Management_Schedule_BE.Models.Tuition", "Tuition")
                        .WithMany("TuitionHistory")
                        .HasForeignKey("TuitionID");

                    b.Navigation("Enrollment");

                    b.Navigation("Tuition");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Teacher", b =>
                {
                    b.HasOne("Management_Schedule_BE.Models.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("Management_Schedule_BE.Models.Teacher", "TeacherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Class", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Course", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Student", b =>
                {
                    b.Navigation("ClassEnrollments");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.StudentClassEnrollment", b =>
                {
                    b.Navigation("TuitionHistory");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.StudySession", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Teacher", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.Tuition", b =>
                {
                    b.Navigation("TuitionHistory");
                });

            modelBuilder.Entity("Management_Schedule_BE.Models.User", b =>
                {
                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
